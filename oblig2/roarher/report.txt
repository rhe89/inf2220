Kompleksitet:

V = graf
E = edges
T = tid

2.1 Realizability og 3.1 Handling circular dependencies
Method(s):  checkIfReliazable() og checkForCycle i Project.

Kompleksitet: O(|V|) + O(|E|)
Kommentar: Itererer gjennom grafen, men kun edgene til hver av nodene en gang.

--------------------------

2.2 Optimal use of resources (optimizing time) og 3.2 Parallel tasks: Start tasks as soon as possible
Method(s):  runProject() i Project

Kompleksitet: O(|T|) * O(|V|)
Kommentar: Har en while-løkke som kjører til tiden er ute.
Inni while-løkken er det to uavhengige løkker som kjører gjennom grafen (altså begge er lineære) for
hver tidsøkning

--------------------------

3.3 Finding critical tasks
Methods: calculateLatestStart(), calculateEarliestStart() i Task og listTasks() i Project.
Kompleksitet: calculateLatestStart(): O(|V|) + O(|E|)
              calculateEarliestStart(): O(|V|) + O(|E|)
              listTasks(): O(|V|)

Kommentar: Tidligste og seneste start: Itererer gjennom grafen, men kun edgene til hver av nodene en gang.
Oppgavelisten: Iterer gjennom grafen en gang.

Håper jeg har forstått dette riktig!